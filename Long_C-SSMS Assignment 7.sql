--TASK 1
SELECT CUST_ID, FIRST_NAME, LAST_NAME
FROM CUSTOMER
WHERE FIRST_NAME LIKE 'S%';

--TASK 2
SELECT *
FROM ITEM
ORDER BY DESCRIPTION;

--TASK 3
SELECT *
FROM ITEM
ORDER BY LOCATION, ITEM_ID;

--TASK 4
SELECT COUNT(*)
FROM CUSTOMER
WHERE BALANCE > CREDIT_LIMIT

SELECT * FROM CUSTOMER WHERE BALANCE > CREDIT_LIMIT

--TASK 5
SELECT SUM(BALANCE)
FROM CUSTOMER 
WHERE REP_ID = '10' AND BALANCE < CREDIT_LIMIT;

SELECT REP_ID, FIRST_NAME, LAST_NAME, BALANCE
FROM CUSTOMER
WHERE BALANCE < CREDIT_LIMIT AND REP_ID = '10';

--TASK 6
SELECT ITEM_ID, DESCRIPTION, (ON_HAND * PRICE) AS ON_HAND_VALUE
FROM ITEM
WHERE ON_HAND > (SELECT AVG(ON_HAND) FROM ITEM);

--TASK 7
SELECT MIN(PRICE)
FROM ITEM;

SELECT ITEM_ID, DESCRIPTION, PRICE FROM ITEM ORDER BY PRICE;

--TASK 8
SELECT ITEM_ID, DESCRIPTION, PRICE
FROM ITEM
WHERE PRICE = (SELECT MIN(PRICE) FROM ITEM);

--TASK 9
SELECT REP_ID, SUM(BALANCE) AS BALANCE
FROM CUSTOMER
GROUP BY REP_ID
ORDER BY REP_ID;

--TASK 10
SELECT REP_ID, SUM(BALANCE) AS BALANCE 
FROM CUSTOMER
GROUP BY REP_ID
HAVING SUM(BALANCE) > 150
ORDER BY REP_ID;

--WHERE vs HAVING
--USING WHERE
SELECT ITEM_ID, CATEGORY, (ON_HAND*PRICE) AS ON_HAND_VALUE
FROM ITEM
WHERE PRICE > 30

--USING HAVING
SELECT ITEM_ID, CATEGORY, SUM(ON_HAND*PRICE) AS ON_HAND_VALUE
FROM ITEM
GROUP BY ITEM_ID, CATEGORY
HAVING SUM(PRICE) > 30;

--TASK 11
SELECT ITEM_ID, DESCRIPTION
FROM ITEM
WHERE DESCRIPTION = ' ';

--TASK 12
SELECT ITEM_ID, DESCRIPTION, CATEGORY
FROM ITEM
WHERE CATEGORY IN ('DOG', 'CAT') AND DESCRIPTION LIKE '%Small%';
