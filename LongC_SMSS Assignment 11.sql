--task 1
CREATE VIEW MAJOR_CUSTOMER AS 
SELECT CUST_ID, FIRST_NAME, LAST_NAME, BALANCE, CREDIT_LIMIT, REP_ID 
FROM CUSTOMER 
WHERE CREDIT_LIMIT <= 500;

--task 2
SELECT * 
FROM MAJOR_CUSTOMER 
WHERE BALANCE > CREDIT_LIMIT;

--task 3
SELECT CUST_ID, FIRST_NAME, LAST_NAME, CREDIT_LIMIT 
FROM CUSTOMER 
WHERE CREDIT_LIMIT <= 500;

--task 4
CREATE VIEW ITEM_INVOICE AS 
SELECT ITEM.ITEM_ID, ITEM.DESCRIPTION, ITEM.PRICE, INVOICES.INVOICE_NUM, 
INVOICES.INVOICE_DATE, INVOICE_LINE.QUANTITY, INVOICE_LINE.QUOTED_PRICE 
FROM ITEM, INVOICES, INVOICE_LINE 
WHERE INVOICES.INVOICE_NUM = INVOICE_LINE.INVOICE_NUM 
AND ITEM.ITEM_ID = INVOICE_LINE.ITEM_ID;

--task 5
SELECT ITEM_ID, DESCRIPTION, INVOICE_NUM, QUOTED_PRICE, FROM ITEM_INVOICE 
WHERE QUOTED_PRICE > 100;

--task 6
SELECT ITEM.ITEM_ID, ITEM.DESCRIPTION, ITEM.PRICE, 
	INVOICES.INVOICE_NUM, INVOICES.INVOICE_DATE, 
	INVOICE_LINE.QUANTITY, INVOICE_LINE.QUOTED_PRICE 
FROM INVOICES, INVOICE_LINE, ITEM 
WHERE INVOICES.INVOICE_NUM = INVOICE_LINE.INVOICE_NUM 
AND INVOICE_LINE.ITEM_ID = ITEM.ITEM_ID 
AND INVOICE_LINE.QUOTED_PRICE > 100;

--task 7
CREATE VIEW INVOICE_TOTAL AS 
SELECT INVOICES.INVOICE_NUM, SUM(QUANTITY*QUOTED_PRICE) AS TOTAL_AMOUNT 
FROM INVOICES, INVOICE_LINE 
WHERE INVOICES.INVOICE_NUM = INVOICE_LINE.INVOICE_NUM 
GROUP BY INVOICES.INVOICE_NUM;

SELECT * FROM INVOICE_TOTAL;

--task 8
SELECT * FROM INVOICE_TOTAL WHERE TOTAL_AMOUNT > 250;

--task 9
SELECT INVOICES.INVOICE_NUM, SUM(QUANTITY*QUOTED_PRICE) AS TOTAL 
FROM INVOICES, INVOICE_LINE 
WHERE INVOICES.INVOICE_NUM = INVOICE_LINE.INVOICE_NUM 
GROUP BY INVOICES.INVOICE_NUM 
HAVING SUM(QUANTITY*QUOTED_PRICE) > 250;

--task 10
CREATE INDEX ITEM_INDEX1 ON INVOICE_LINE(ITEM_ID);

--task 11
CREATE INDEX ITEM_INDEX2 ON ITEM(CATEGORY);

--task 12
CREATE INDEX ITEM_INDEX3 ON ITEM(CATEGORY, LOCATION);

--task 13
SELECT COLUMN_NAME, DATA_TYPE 
FROM INFORMATION_SCHEMA.COLUMNS 
WHERE TABLE_NAME = 'ITEM';

--task 14
ALTER TABLE INVOICE_LINE 
ADD FOREIGN KEY (INVOICE_NUM) REFERENCES INVOICES(INVOICE_NUM);